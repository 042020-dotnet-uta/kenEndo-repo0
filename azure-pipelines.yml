# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool: 
  vmImage: 'ubuntu-latest'

#watch for PR's
pr: 'none'

#groups sequential actions
stages:
  - stage:
    jobs:
      - job: 'build'
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'KensProject0'
              organization: 'kenstestkey'
              scannerMode: 'MSBuild'
              projectKey: '0d21e1087fa69586dbafcf2bf09d229dcb40ca12'
              projectName: 'Project0Test'
              extraProperties: 
                sonar.exclusions=**/obj/**,**/*.dll
                sonar.branch.name=$(Build.SourceBranchName)
                sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
                sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.xml
          - script: dotnet build "Project0\Project0.sln"
          - script: echo "Project built"
          - task: DotNetCoreCLI@2
            displayName: dotnet test
            inputs:
              command: 'test'
              arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/ --logger trx'
              projects: '**/*Project0Test.csproj'
              nobuild: true
          - task: PublishCodeCoverageResults@1
            displayName: 'Publish code coverage report'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '$(Build.SourcesDirectory)/**/*.xml'
          - task: SonarCloudAnalyze@1
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
          - script: dotnet publish "Project0\Project0.sln"

