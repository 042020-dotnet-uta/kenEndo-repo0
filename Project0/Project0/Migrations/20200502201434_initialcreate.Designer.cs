// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project0;

namespace Project0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200502201434_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Project0.Properties.UserOrderItem", b =>
                {
                    b.Property<int>("UserOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoreItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserOrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserOrderItemId");

                    b.HasIndex("StoreItemId");

                    b.HasIndex("UserOrderId");

                    b.ToTable("UserOrderItems");
                });

            modelBuilder.Entity("Project0.Properties.UserOrderQuantity", b =>
                {
                    b.Property<int>("UserOrderQuantityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoreItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserOrderQuantityId");

                    b.HasIndex("StoreItemId");

                    b.HasIndex("UserOrderId");

                    b.ToTable("UserOrderQuantities");
                });

            modelBuilder.Entity("Project0.StoreItem", b =>
                {
                    b.Property<int>("StoreItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoreItemInventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoreLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemName")
                        .HasColumnType("TEXT");

                    b.Property<double>("itemPrice")
                        .HasColumnType("REAL");

                    b.HasKey("StoreItemId");

                    b.HasIndex("StoreItemInventoryId");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("StoreItems");
                });

            modelBuilder.Entity("Project0.StoreItemInventory", b =>
                {
                    b.Property<int>("StoreItemInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemInventory")
                        .HasColumnType("INTEGER");

                    b.HasKey("StoreItemInventoryId");

                    b.ToTable("StoreItemInventories");
                });

            modelBuilder.Entity("Project0.StoreLocation", b =>
                {
                    b.Property<int>("StoreLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreLocationId");

                    b.ToTable("StoreLocations");
                });

            modelBuilder.Entity("Project0.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("fName")
                        .HasColumnType("TEXT");

                    b.Property<string>("lName")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("userName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserInfoId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Project0.UserOrder", b =>
                {
                    b.Property<int>("UserOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoreLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("UserOrderId");

                    b.HasIndex("StoreLocationId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserOrders");
                });

            modelBuilder.Entity("Project0.Properties.UserOrderItem", b =>
                {
                    b.HasOne("Project0.StoreItem", "StoreItem")
                        .WithMany()
                        .HasForeignKey("StoreItemId");

                    b.HasOne("Project0.UserOrder", "UserOrder")
                        .WithMany("UserOrderItems")
                        .HasForeignKey("UserOrderId");
                });

            modelBuilder.Entity("Project0.Properties.UserOrderQuantity", b =>
                {
                    b.HasOne("Project0.StoreItem", "StoreItem")
                        .WithMany()
                        .HasForeignKey("StoreItemId");

                    b.HasOne("Project0.UserOrder", "UserOrder")
                        .WithMany("UserOrderQuantity")
                        .HasForeignKey("UserOrderId");
                });

            modelBuilder.Entity("Project0.StoreItem", b =>
                {
                    b.HasOne("Project0.StoreItemInventory", "StoreItemInventory")
                        .WithMany("StoreItem")
                        .HasForeignKey("StoreItemInventoryId");

                    b.HasOne("Project0.StoreLocation", "StoreLocation")
                        .WithMany("StoreItems")
                        .HasForeignKey("StoreLocationId");
                });

            modelBuilder.Entity("Project0.UserOrder", b =>
                {
                    b.HasOne("Project0.StoreLocation", "StoreLocation")
                        .WithMany()
                        .HasForeignKey("StoreLocationId");

                    b.HasOne("Project0.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
